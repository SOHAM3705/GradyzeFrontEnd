import React, { useState, useEffect } from "react";
import { Link, useNavigate, useLocation } from "react-router-dom";
import axios from "axios";
import styles from "./StudentLogin.module.css";

const StudentLogin = () => {
  const [formData, setFormData] = useState({ email: "", password: "" });
  const [error, setError] = useState(null);
  const [loading, setLoading] = useState(false);
  const navigate = useNavigate();
  const location = useLocation();

  const API_BASE_URL =
    process.env.REACT_APP_API_URL || "https://gradyzebackend.onrender.com";

  // Handle Google OAuth callback
  useEffect(() => {
    const loadGoogleScript = () => {
      if (window._gsiInitialized) return;

      const script = document.createElement("script");
      script.src = "https://accounts.google.com/gsi/client";
      script.async = true;
      script.defer = true;
      script.onload = initializeGSI;
      document.body.appendChild(script);
    };

    const initializeGSI = () => {
      const GOOGLE_CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;

      if (window.google && window.google.accounts && GOOGLE_CLIENT_ID) {
        window.google.accounts.id.initialize({
          client_id: GOOGLE_CLIENT_ID,
          callback: handleCredentialResponse,
          auto_select: false,
          cancel_on_tap_outside: true,
        });

        window.google.accounts.id.renderButton(
          document.getElementById("gsi-button"),
          {
            theme: "outline",
            size: "large",
          }
        );

        window._gsiInitialized = true;
      } else {
        console.warn("❗ Google API not loaded or Client ID missing.");
      }
    };

    const handleCredentialResponse = async (response) => {
      try {
        // Send Google credentials token to the backend
        const res = await axios.post(`${API_BASE_URL}/api/auth/google`, {
          token: response.credential, // Google 'id_token'
          role: "student", // Specify the role
        });

        const { token, studentId, name, adminId } = res.data;

        // Store the JWT token (generated by the backend) in sessionStorage
        sessionStorage.setItem("token", token);
        sessionStorage.setItem("role", "student");
        sessionStorage.setItem("studentId", studentId);
        sessionStorage.setItem("studentName", name);
        sessionStorage.setItem("adminId", adminId);

        console.log("✅ Google login success:", res.data);

        // Navigate to the student dashboard after successful login
        navigate("/studentdash");
      } catch (err) {
        console.error("❌ Google login failed:", err);
        setError("Google login failed. Try again.");
      }
    };

    loadGoogleScript();
  }, [navigate]);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.id]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError(null);

    try {
      const response = await axios.post(
        `${API_BASE_URL}/api/student/studentlogin`,
        formData
      );

      if (response.data.token) {
        sessionStorage.setItem("token", response.data.token);
        sessionStorage.setItem("studentId", response.data.studentId);
        sessionStorage.setItem("studentName", response.data.name);
        sessionStorage.setItem("adminId", response.data.adminId);
        sessionStorage.setItem("role", "student");

        console.log("✅ Student Data stored in sessionStorage");
        navigate("/studentdash");
      } else {
        throw new Error("Token missing in response");
      }
    } catch (err) {
      setError(err.response?.data?.message || "Invalid email or password");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className={styles.studentBg}>
      <div className={styles.loginContainer}>
        <Link to="/">
          <button className={styles.backButton_Slogin}>
            <i className="fas fa-arrow-left"></i>
          </button>
        </Link>

        <div className={styles.loginHeader}>
          <h2>Student Login</h2>
        </div>

        {error && <p className={styles.errorMessage}>{error}</p>}
        {loading && <p className={styles.loadingMessage}>Loading...</p>}

        <form onSubmit={handleSubmit}>
          <div className={styles.inputGroup}>
            <i className="fas fa-envelope"></i>
            <input
              type="email"
              id="email"
              placeholder="Email"
              value={formData.email}
              onChange={handleChange}
              required
            />
          </div>

          <div className={styles.inputGroup}>
            <i className="fas fa-lock"></i>
            <input
              type="password"
              id="password"
              placeholder="Password"
              value={formData.password}
              onChange={handleChange}
              required
            />
          </div>

          <button className={styles.submitStudentloginbut} type="submit">
            Login
          </button>
        </form>

        {/* Google Login Button */}
        <div
          id="gsi-button"
          style={{ marginTop: "20px", width: "100%" }} // Same width as login button
        ></div>

        <p>Don't have an account? Contact Your College/School Admin</p>
        <p>
          <Link to="/student-forget-password" className={styles.StudentLogin_a}>
            Forgot Password?
          </Link>
        </p>
      </div>
    </div>
  );
};

export default StudentLogin;
